tags: BigQuery
stages:
  Inputs:
    actors:
      CopySchemaInput:
        parent: DeepCopy
        in:
          value:
            external: tableSchema
        out:
          value:
            schema: '#ref'
      Params:
        parent: Const
        in:
          value:
            const: null
            external: params
            schema: '#ref'
        out:
          value:
            schema: '#ref'
  Loop over params:
    actors:
      ParamKey:
        parent: Const
        in:
          value:
            const: null
            link:
              path: Params/value/Field Name
              iterate: Iterate
        out:
          value:
            schema: string
  Value and Type:
    actors:
      FindFieldType:
        parent: JavaScript
        in:
          script:
            const:
              userCode: |-
                var res = null;
                array.forEach(item => {
                    if (item["column_name"] === param) {
                        res = item["data_type"];
                    }
                });
                res;
              script: |-
                var res = null;
                array.forEach(function (item) {
                  if (item["column_name"] === param) {
                    res = item["data_type"];
                  }
                });
                res;
          array:
            link: CopySchemaInput/value
            schema: '#ref'
            mandatory: false
          param:
            link: ParamKey/value
            schema: string
            mandatory: false
        out:
          result:
            schema: string
  Parse to typed value:
    actors:
      StringToTypedValue:
        parent: LuFunction
        in:
          functionName:
            const: bigQueryParseTdmQueryParam
          fieldName:
            link: ParamKey/value
            schema: any
            mandatory: false
          value:
            link:
              path: Params/value/Field Value
              iterate: Iterate
            schema: any
            mandatory: false
          type:
            link: FindFieldType/result
            schema: any
            mandatory: false
        out:
          result:
            schema: any
  Output the array:
    actors:
      TypedParams:
        parent: ArrayBuilder
        in:
          input:
            link:
              path: StringToTypedValue/result
              pos: 0
        out:
          array:
            external: parsedParamsValues
            schema: '#ref'
schemas:
  CopySchemaInput.out.value:
    type: array
    items:
      type: object
      properties:
        column_name:
          type: string
        data_type:
          type: string
  Params.in.value:
    type: array
    items: {
      }
  Params.out.value:
    type: array
    items:
      type: object
      properties:
        Field Name:
          type: string
        Field Type:
          type: string
        Field Value:
          type: string
  FindFieldType.in.array:
    type: array
    items:
      type: object
      properties:
        column_name:
          type: string
        data_type:
          type: string
  TypedParams.out.array:
    type: array
    items:
      type: string
